name: CI/CD Pipeline for Flask App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # allow manual trigger

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: my-flask-app
      CONTAINER_NAME: my-flask-app
      APP_PORT: 5000
      REPORTS_DIR: reports

    steps:
      # -------------------------
      # 1. Checkout Code
      # -------------------------
      - name: Checkout Repository
        uses: actions/checkout@v4

      # -------------------------
      # 2. Setup Python & Install Dependencies
      # -------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest-html

      # -------------------------
      # 3. Run Unit Tests & Upload Report
      # -------------------------
      - name: Run Unit Tests
        run: |
          pytest --html=report.html --self-contained-html || true

      - name: Upload Unit Test Report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: report.html

      # -------------------------
      # 4. Build Docker Image
      # -------------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME .

      # -------------------------
      # 5. Trivy Security Scan
      # -------------------------
      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}
          format: 'table'
          exit-code: '0'
          severity: 'HIGH,CRITICAL'
          output: ${{ env.REPORTS_DIR }}/trivy-image-report.txt

      - name: Run Trivy Scan (HTML)
        run: |
          mkdir -p $REPORTS_DIR
          trivy image --severity HIGH,CRITICAL -f html -o $REPORTS_DIR/trivy-image-report.html $IMAGE_NAME || true

      - name: Upload Trivy Reports
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: reports/trivy-image-report.*

      # -------------------------
      # 6. Run Docker Container
      # -------------------------
      - name: Run Docker Container
        run: |
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
          docker run -d -p $APP_PORT:$APP_PORT --name $CONTAINER_NAME $IMAGE_NAME
